<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<TrustFrameworkPolicy
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:xsd="http://www.w3.org/2001/XMLSchema"
  xmlns="http://schemas.microsoft.com/online/cpim/schemas/2013/06"
  PolicySchemaVersion="0.3.0.0"
  TenantId="farooqiefb2c.onmicrosoft.com"
  PolicyId="B2C_1A_ExampleExtensions"
  PublicPolicyUri="http://farooqiefb2c.onmicrosoft.com/B2C_1A_ExampleExtensions">

	<BasePolicy>
		<TenantId>farooqiefb2c.onmicrosoft.com</TenantId>
		<PolicyId>B2C_1A_ExampleBase</PolicyId>
	</BasePolicy>

	<BuildingBlocks>
		<ClaimsSchema>
			<ClaimType Id="passwordText">
				<DataType>string</DataType>
			</ClaimType>
			<ClaimType Id="message">
				<DataType>string</DataType>
			</ClaimType>
			
			<ClaimType Id="accountType">
				<DisplayName>Account Type</DisplayName>
				<DataType>string</DataType>
				<UserHelpText>The type of account being registered.</UserHelpText>
				<UserInputType>DropdownSingleSelect</UserInputType>
				<Restriction>
					<Enumeration Text="Company Account" Value="company" SelectByDefault="false"/>
					<Enumeration Text="Individual Account" Value="individual" SelectByDefault="true"/>
				</Restriction>
			</ClaimType>
			<ClaimType Id="domain">
				<DataType>string</DataType>
			</ClaimType>
			<ClaimType Id="domainStatus">
				<DataType>string</DataType>
			</ClaimType>
			<ClaimType Id="accessCode">
				<DisplayName>Access Code</DisplayName>
				<DataType>string</DataType>
				<UserHelpText>Enter your invitation access code.</UserHelpText>
				<UserInputType>Password</UserInputType>
			</ClaimType>
			<ClaimType Id="isValidAccessCode">
				<DataType>boolean</DataType>
			</ClaimType>
			<ClaimType Id="validDomains">
				<DataType>stringCollection</DataType>
			</ClaimType>
			<ClaimType Id="isValidDomain">
				<DataType>boolean</DataType>
			</ClaimType>
		</ClaimsSchema>
		<ClaimsTransformations>
			<ClaimsTransformation Id="CreateDisplayNameTransformation" TransformationMethod="FormatStringMultipleClaims">
				<InputClaims>
					<InputClaim ClaimTypeReferenceId="givenName" TransformationClaimType="inputClaim1"/>
					<InputClaim ClaimTypeReferenceId="surname" TransformationClaimType="inputClaim2"/>
				</InputClaims>
				<InputParameters>
					<InputParameter Id="stringFormat" DataType="string" Value="{0} {1}"/>
				</InputParameters>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="displayName" TransformationClaimType="outputClaim"/>
				</OutputClaims>
			</ClaimsTransformation>
			<ClaimsTransformation Id="CreateMessageTransformation" TransformationMethod="FormatStringClaim">
				<InputClaims>
					<InputClaim ClaimTypeReferenceId="displayName" TransformationClaimType="inputClaim"/>
				</InputClaims>
				<InputParameters>
					<InputParameter Id="stringFormat" DataType="string" Value="Hello {0}"/>
				</InputParameters>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="message" TransformationClaimType="outputClaim"/>
				</OutputClaims>
			</ClaimsTransformation>
			<ClaimsTransformation Id="GetDomainFromEmail" TransformationMethod="ParseDomain">
				<InputClaims>
					<InputClaim ClaimTypeReferenceId="email" TransformationClaimType="emailAddress" />
				</InputClaims>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="domain" TransformationClaimType="domain" />
				</OutputClaims>
			</ClaimsTransformation>
			<ClaimsTransformation Id="CheckIfIsValidAccessCode" TransformationMethod="CompareClaimToValue">
				<InputClaims>
					<InputClaim ClaimTypeReferenceId="accessCode" TransformationClaimType="inputClaim1"/>
				</InputClaims>
				<InputParameters>
					<InputParameter Id="compareTo" DataType="string" Value="123456"/>
					<InputParameter Id="operator" DataType="string" Value="equal"/>
					<InputParameter Id="ignoreCase" DataType="string" Value="true"/>
				</InputParameters>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="isValidAccessCode" TransformationClaimType="outputClaim"/>
				</OutputClaims>
			</ClaimsTransformation>
			<ClaimsTransformation Id="ThrowIfIsNotValidAccessCode" TransformationMethod="AssertBooleanClaimIsEqualToValue">
				<InputClaims>
					<InputClaim ClaimTypeReferenceId="isValidAccessCode" TransformationClaimType="inputClaim"/>
				</InputClaims>
				<InputParameters>
					<InputParameter Id="valueToCompareTo" DataType="boolean" Value="true"/>
				</InputParameters>
			</ClaimsTransformation>
			<ClaimsTransformation Id="AssertIsValidDomainIsTrue" TransformationMethod="AssertBooleanClaimIsEqualToValue">
				<InputClaims>
					<InputClaim ClaimTypeReferenceId="isValidDomain" TransformationClaimType="inputClaim" />
				</InputClaims>
				<InputParameters>
					<InputParameter Id="valueToCompareTo" DataType="boolean" Value="true" />
				</InputParameters>
			</ClaimsTransformation>
			<ClaimsTransformation Id="CopyPassword" TransformationMethod="CopyClaim">
				<InputClaims>
					<InputClaim ClaimTypeReferenceId="password" TransformationClaimType="inputClaim"/>
				</InputClaims>
				<OutputClaims>
					<OutputClaim ClaimTypeReferenceId="passwordText" TransformationClaimType="outputClaim"/>
				</OutputClaims>
			</ClaimsTransformation>
		</ClaimsTransformations>
		<ContentDefinitions>
			<ContentDefinition Id="SelfAssertedContentDefinition">
				<LoadUri>~/tenant/default/selfAsserted.cshtml</LoadUri>
				<RecoveryUri>~/common/default_page_error.html</RecoveryUri>
				<DataUri>urn:com:microsoft:aad:b2c:elements:contract:selfasserted:1.2.0</DataUri>
			</ContentDefinition>
			<ContentDefinition Id="SignupOrSigninContentDefinition">
				<LoadUri>~/tenant/default/unified.cshtml</LoadUri>
				<RecoveryUri>~/common/default_page_error.html</RecoveryUri>
				<DataUri>urn:com:microsoft:aad:b2c:elements:contract:unifiedssp:2.0.0</DataUri>
				<Metadata>
					<Item Key="DisplayName">Signin and Signup</Item>
				</Metadata>
			</ContentDefinition>
		</ContentDefinitions>
	</BuildingBlocks>
	<ClaimsProviders>
		<ClaimsProvider>
			<TechnicalProfiles>
				<TechnicalProfile Id="UserInputMessageClaimGenerator">
					<!--
  Generates the content of the message claim by applying the relevant claims transformation
  -->
					<DisplayName>User Input Message Claim Generator Technical Profile</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="message"/>
					</OutputClaims>
					<OutputClaimsTransformations>
						<OutputClaimsTransformation ReferenceId="CreateMessageTransformation"/>
					</OutputClaimsTransformations>
				</TechnicalProfile>
				<TechnicalProfile Id="UserInputDisplayNameGenerator">
					<DisplayName>Display Name Claim Generator Technical Profile</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="displayName"/>
					</OutputClaims>
					<OutputClaimsTransformations>
						<OutputClaimsTransformation ReferenceId="CreateDisplayNameTransformation"/>
					</OutputClaimsTransformations>
				</TechnicalProfile>
				<TechnicalProfile Id="PasswordCopier">
					<DisplayName>Copy Password Profile</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
					<InputClaimsTransformations>
						<InputClaimsTransformation ReferenceId="CopyPassword"/>
					</InputClaimsTransformations>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="passwordText" Required="true"/>
					</OutputClaims>
				</TechnicalProfile>
				<TechnicalProfile Id="UserSignInCollector">
					<DisplayName>Local Account Signin</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					<Metadata>
						<Item Key="setting.operatingMode">Email</Item>
						<Item Key="SignUpTarget">SignUpWithLogonEmailExchange</Item>
					</Metadata>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="email" Required="true" />
						<OutputClaim ClaimTypeReferenceId="password" Required="true" />
						<OutputClaim ClaimTypeReferenceId="objectId" />
					</OutputClaims>
					<ValidationTechnicalProfiles>
						<ValidationTechnicalProfile ReferenceId="LoginUser" />
					</ValidationTechnicalProfiles>
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>
		<ClaimsProvider>
			<TechnicalProflies>
				<TechnicalProfile Id="UserInformationCollector">
					<DisplayName>Collect Sample User Input Technical Profile</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					<Metadata>
						<Item Key="ContentDefinitionReferenceId">SelfAssertedContentDefinition</Item>
						<Item Key="LookupNotFound">The provided email address was not from a valid company.</Item>
						<Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">The provided email address was not from a valid company.</Item>
					</Metadata>
					<DisplayClaims>
						<DisplayClaim ClaimTypeReferenceId="givenName" Required="true"/>
						<DisplayClaim ClaimTypeReferenceId="surname"  Required="true"/>
						<DisplayClaim ClaimTypeReferenceId="accountType" Required="true"/>
						<DisplayClaim ClaimTypeReferenceId="email" Required="true"/>
						<DisplayClaim ClaimTypeReferenceId="password" Required="true"/>
					</DisplayClaims>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="givenName"/>
						<OutputClaim ClaimTypeReferenceId="surname"/>
						<OutputClaim ClaimTypeReferenceId="accountType"/>
						<OutputClaim ClaimTypeReferenceId="email"/>
						<OutputClaim ClaimTypeReferenceId="password"/>
						<OutputClaim ClaimTypeReferenceId="domain"/>
						<OutputClaim ClaimTypeReferenceId="domainStatus"/>
						<OutputClaim ClaimTypeReferenceId="validDomains"/>
						<OutputClaim ClaimTypeReferenceId="passwordText"/>
					</OutputClaims>
					<ValidationTechnicalProfiles>
						<ValidationTechnicalProfile ReferenceId="HttpCompanyDomainsCollector">
							<Preconditions>
								<Precondition Type="ClaimEquals" ExecuteActionsIf="false">
									<Value>accountType</Value>
									<Value>company</Value>
									<Action>SkipThisValidationTechnicalProfile</Action>
								</Precondition>
							</Preconditions>
						</ValidationTechnicalProfile>
						<ValidationTechnicalProfile ReferenceId="HttpStringCollectionContainsClaim">
							<Preconditions>
								<Precondition Type="ClaimEquals" ExecuteActionsIf="false">
									<Value>accountType</Value>
									<Value>company</Value>
									<Action>SkipThisValidationTechnicalProfile</Action>
								</Precondition>
							</Preconditions>
						</ValidationTechnicalProfile>
						<ValidationTechnicalProfile ReferenceId="PasswordCopier"/>
					</ValidationTechnicalProfiles>
				</TechnicalProfile>
			</TechnicalProflies>
			
		</ClaimsProvider>
		<ClaimsProvider>
			<TechnicalProfiles>
				<TechnicalProfile Id="UserInputDisplayNameGenerator">
					<DisplayName>Display Name Claim Generator Technical Profile</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="displayName"/>
					</OutputClaims>
					<OutputClaimsTransformations>
						<OutputClaimsTransformation ReferenceId="CreateDisplayNameTransformation"/>
					</OutputClaimsTransformations>
				</TechnicalProfile>
			</TechnicalProfiles>

		</ClaimsProvider>
		<ClaimsProvider>
			<!-- 
  The technical profile(s) defined in this section specify Token Issuers that are used by the required SendClaims step of a User Journey 
  to return a token to the caller.
  -->
			<DisplayName>Token Issuer Technical Profiles</DisplayName>
			<TechnicalProfiles>
				<TechnicalProfile Id="AccessCodeInputCollector">
					<DisplayName>Collect Access Code Input Technical Profile</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					<Metadata>
						<Item Key="ContentDefinitionReferenceId">SelfAssertedContentDefinition</Item>
						<Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">Invalid access code.</Item>
					</Metadata>
					<DisplayClaims>
						<DisplayClaim ClaimTypeReferenceId="accessCode" Required="true"/>
					</DisplayClaims>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="accessCode"/>
					</OutputClaims>
					<ValidationTechnicalProfiles>
						<ValidationTechnicalProfile ReferenceId="CheckAccessCodeViaHttp"/>
					</ValidationTechnicalProfiles>
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>
		<ClaimsProvider>
			<!--
  The technical profile defined in this section allows a user to enter their first and last name, then composes the message text based on those entries.
  -->
			<DisplayName>Sample User Input Collection Technical Profiles</DisplayName>
			<TechnicalProfiles>
				<TechnicalProfile Id="UserInformationCollector">
					<DisplayName>Collect Sample User Input Technical Profile</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.SelfAssertedAttributeProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" />
					<Metadata>
						<Item Key="ContentDefinitionReferenceId">SelfAssertedContentDefinition</Item>
						<Item Key="LookupNotFound">The provided email address was not from a valid company.</Item>
						<Item Key="UserMessageIfClaimsTransformationBooleanValueIsNotEqual">The provided email address was not from a valid company.</Item>
					</Metadata>
					<DisplayClaims>
						<DisplayClaim ClaimTypeReferenceId="givenName" Required="true"/>
						<DisplayClaim ClaimTypeReferenceId="surname"  Required="true"/>
						<DisplayClaim ClaimTypeReferenceId="accountType" Required="true"/>
						<DisplayClaim ClaimTypeReferenceId="email" Required="true"/>
						<DisplayClaim ClaimTypeReferenceId="password" Required="true"/>
					</DisplayClaims>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="givenName"/>
						<OutputClaim ClaimTypeReferenceId="surname"/>
						<OutputClaim ClaimTypeReferenceId="accountType"/>
						<OutputClaim ClaimTypeReferenceId="email"/>
						<OutputClaim ClaimTypeReferenceId="password"/>
						<OutputClaim ClaimTypeReferenceId="domain"/>
						<OutputClaim ClaimTypeReferenceId="domainStatus"/>
						<OutputClaim ClaimTypeReferenceId="validDomains"/>
						<OutputClaim ClaimTypeReferenceId="passwordText"/>
					</OutputClaims>
					<ValidationTechnicalProfiles>
						<ValidationTechnicalProfile ReferenceId="HttpCompanyDomainsCollector">
							<Preconditions>
								<Precondition Type="ClaimEquals" ExecuteActionsIf="false">
									<Value>accountType</Value>
									<Value>company</Value>
									<Action>SkipThisValidationTechnicalProfile</Action>
								</Precondition>
							</Preconditions>
						</ValidationTechnicalProfile>
						<ValidationTechnicalProfile ReferenceId="HttpStringCollectionContainsClaim">
							<Preconditions>
								<Precondition Type="ClaimEquals" ExecuteActionsIf="false">
									<Value>accountType</Value>
									<Value>company</Value>
									<Action>SkipThisValidationTechnicalProfile</Action>
								</Precondition>
							</Preconditions>
						</ValidationTechnicalProfile>
						<ValidationTechnicalProfile ReferenceId="PasswordCopier"/>
					</ValidationTechnicalProfiles>
				</TechnicalProfile>
				<TechnicalProfile Id="PasswordCopier">
					<DisplayName>Copy Password Profile</DisplayName>
					<Protocol Name="Proprietary" Handler="Web.TPEngine.Providers.ClaimsTransformationProtocolProvider, Web.TPEngine, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null"/>
					<InputClaimsTransformations>
						<InputClaimsTransformation ReferenceId="CopyPassword"/>
					</InputClaimsTransformations>
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="passwordText" Required="true"/>
					</OutputClaims>
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>
		<ClaimsProvider>
			<DisplayName>Azure Active Directory Technical Profiles</DisplayName>
			<TechnicalProfiles>
				<TechnicalProfile Id="AADUserWriter">
					<PersistedClaims>
						<PersistedClaim ClaimTypeReferenceId="passwordText" PartnerClaimType="password"/>
						<PersistedClaim ClaimTypeReferenceId="accountType" PartnerClaimType="extension_accountType"/>
					</PersistedClaims>
				</TechnicalProfile>
  
				<TechnicalProfile Id="AADUserReader">
					<OutputClaims>
						<OutputClaim ClaimTypeReferenceId="accountType" PartnerClaimType="extension_accountType"/>
					</OutputClaims>
				</TechnicalProfile>  

				<TechnicalProfile Id="AADUserUpdater">
					<PersistedClaims>
						<PersistedClaim ClaimTypeReferenceId="passwordText" PartnerClaimType="password"/>
						<PersistedClaim ClaimTypeReferenceId="accountType" PartnerClaimType="extension_accountType"/>
					</PersistedClaims>
				</TechnicalProfile>
				<TechnicalProfile Id="AAD-Common">
					<Metadata>
						<Item Key="ApplicationObjectId">b12c5502-7448-4c6e-96a1-2599b47902b0</Item>
						<Item Key="ClientId">b1a7530b-ea36-4f97-88db-f16746bcda8d</Item>
					</Metadata>
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>
		<ClaimsProvider>
			<DisplayName>OpenID Connect Technical Profiles</DisplayName>
			<TechnicalProfiles>
				<TechnicalProfile Id="LoginUser">
					<Metadata>
						<Item Key="client_id">PROXY_ID_APPID</Item>
						<Item Key="IdTokenAudience">ID_APPID</Item>          
					</Metadata>
					<InputClaims>
						<InputClaim ClaimTypeReferenceId="client_id" DefaultValue="22b4c412-21d2-47b5-ab53-30e93216a10e" />
						<InputClaim ClaimTypeReferenceId="resource_id" PartnerClaimType="resource" DefaultValue="532ceb94-879c-477b-af49-e268601e82c6" />
					</InputClaims>
				</TechnicalProfile>
			</TechnicalProfiles>
		</ClaimsProvider>
	</ClaimsProviders>
</TrustFrameworkPolicy>